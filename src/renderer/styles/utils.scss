// Utility Mixins and Functions
// Responsive utilities and common patterns for building components

@use "sass:map";
@use "sass:list";
@use "typography" as *;

// Breakpoints
$breakpoints: (
  xs: 0,
  sm: 640px,
  md: 768px,
  lg: 1024px,
  xl: 1280px,
  2xl: 1536px
);

// Spacing Scale (consistent with modern design systems)
$spacing: (
  0: 0,
  1: 0.25rem,    // 4px
  2: 0.5rem,     // 8px
  3: 0.75rem,    // 12px
  4: 1rem,       // 16px
  5: 1.25rem,    // 20px
  6: 1.5rem,     // 24px
  8: 2rem,       // 32px
  10: 2.5rem,    // 40px
  12: 3rem,      // 48px
  16: 4rem,      // 64px
  20: 5rem,      // 80px
  24: 6rem,      // 96px
  32: 8rem,      // 128px
  40: 10rem,     // 160px
  48: 12rem,     // 192px
  56: 14rem,     // 224px
  64: 16rem      // 256px
);

// Border Radius Scale
$border-radius: (
  none: 0,
  sm: 0.125rem,   // 2px
  base: 0.25rem,  // 4px
  md: 0.375rem,   // 6px
  lg: 0.5rem,     // 8px
  xl: 0.75rem,    // 12px
  2xl: 1rem,      // 16px
  3xl: 1.5rem,    // 24px
  full: 9999px
);

// Z-index Scale
$z-index: (
  hide: -1,
  auto: auto,
  base: 0,
  docked: 10,
  dropdown: 1000,
  sticky: 1020,
  banner: 1030,
  overlay: 1040,
  modal: 1050,
  popover: 1060,
  skipLink: 1070,
  toast: 1080,
  tooltip: 1090
);

// Media Query Mixins
@function breakpoint($size) {
  @return map.get($breakpoints, $size);
}

@mixin media-up($size) {
  @media (min-width: breakpoint($size)) {
    @content;
  }
}

@mixin media-down($size) {
  @media (max-width: breakpoint($size) - 1px) {
    @content;
  }
}

@mixin media-between($min, $max) {
  @media (min-width: breakpoint($min)) and (max-width: breakpoint($max) - 1px) {
    @content;
  }
}

@mixin media-only($size) {
  @if $size == xs {
    @media (max-width: breakpoint(sm) - 1px) {
      @content;
    }
  } @else {
    $next: null;
    $keys: map.keys($breakpoints);
    $index: list.index($keys, $size);
    
    @if $index < length($keys) {
      $next: list.nth($keys, $index + 1);
    }
    
    @if $next {
      @media (min-width: breakpoint($size)) and (max-width: breakpoint($next) - 1px) {
        @content;
      }
    } @else {
      @media (min-width: breakpoint($size)) {
        @content;
      }
    }
  }
}

// Spacing Utilities
@function spacing($size) {
  @return map.get($spacing, $size);
}

@function radius($size) {
  @return map.get($border-radius, $size);
}

@function z($layer) {
  @return map.get($z-index, $layer);
}

// Layout Mixins
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-column-center {
  @include flex-column;
  align-items: center;
  justify-content: center;
}

@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin absolute-cover {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

// Container Mixins
@mixin container {
  width: 100%;
  margin: 0 auto;
  padding: 0 spacing(4);
  
  @include media-up(sm) {
    padding: 0 spacing(6);
  }
  
  @include media-up(lg) {
    padding: 0 spacing(8);
  }
}

@mixin container-fluid {
  width: 100%;
  margin: 0 auto;
  padding: 0 spacing(4);
  
  @include media-up(sm) {
    padding: 0 spacing(6);
  }
}

// Animation Mixins
@mixin transition($properties: all, $duration: 0.2s, $easing: ease-in-out) {
  transition: $properties $duration $easing;
}

@mixin hover-lift {
  @include transition(transform, 0.2s, ease-out);
  
  &:hover {
    transform: translateY(-2px);
  }
}

@mixin hover-scale($scale: 1.05) {
  @include transition(transform, 0.2s, ease-out);
  
  &:hover {
    transform: scale($scale);
  }
}

// Focus States
@mixin focus-ring($color: var(--focus-ring, #ff6b35), $offset: 2px) {
  &:focus {
    outline: 2px solid $color;
    outline-offset: $offset;
  }
}

@mixin focus-visible {
  &:focus-visible {
    outline: 2px solid var(--focus-ring, #ff6b35);
    outline-offset: 2px;
  }
  
  &:focus:not(:focus-visible) {
    outline: none;
  }
}

// Interactive States
@mixin interactive {
  cursor: pointer;
  @include transition();
  @include focus-visible;
  
  &:disabled {
    cursor: not-allowed;
    opacity: 0.5;
  }
}

// Card Mixins
@mixin card-base {
  background: var(--bg-secondary, #242424);
  border: 1px solid var(--border-primary, #404040);
  border-radius: radius(lg);
  padding: spacing(6);
}

@mixin card-elevated {
  @include card-base;
  box-shadow: var(--shadow-md, 0 4px 6px rgba(0, 0, 0, 0.4));
}

@mixin card-interactive {
  @include card-elevated;
  @include interactive;
  @include hover-lift;
}

// Button Mixins
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: spacing(2);
  padding: spacing(3) spacing(4);
  border: none;
  border-radius: radius(md);
  font-weight: 500;
  font-size: $font-size-sm;
  line-height: 1;
  text-decoration: none;
  white-space: nowrap;
  @include interactive;
}

@mixin button-primary {
  @include button-base;
  background: var(--primary-color, #ff6b35);
  color: var(--text-inverse, #1a1a1a);
  
  &:hover:not(:disabled) {
    background: var(--primary-color-dark, #e55a2b);
  }
}

@mixin button-secondary {
  @include button-base;
  background: var(--bg-tertiary, #2d2d2d);
  color: var(--text-primary, #f5f5f5);
  border: 1px solid var(--border-primary, #404040);
  
  &:hover:not(:disabled) {
    background: var(--bg-quaternary, #363636);
  }
}

// Scrollbar Styling
@mixin custom-scrollbar {
  &::-webkit-scrollbar {
    width: 8px;
    height: 8px;
  }
  
  &::-webkit-scrollbar-track {
    background: var(--bg-secondary, #242424);
  }
  
  &::-webkit-scrollbar-thumb {
    background: var(--border-primary, #404040);
    border-radius: radius(full);
    
    &:hover {
      background: var(--border-secondary, #333333);
    }
  }
}

// Utility Classes Generator
@each $name, $value in $spacing {
  .m-#{$name} { margin: $value; }
  .mt-#{$name} { margin-top: $value; }
  .mr-#{$name} { margin-right: $value; }
  .mb-#{$name} { margin-bottom: $value; }
  .ml-#{$name} { margin-left: $value; }
  .mx-#{$name} { 
    margin-left: $value; 
    margin-right: $value; 
  }
  .my-#{$name} { 
    margin-top: $value; 
    margin-bottom: $value; 
  }
  
  .p-#{$name} { padding: $value; }
  .pt-#{$name} { padding-top: $value; }
  .pr-#{$name} { padding-right: $value; }
  .pb-#{$name} { padding-bottom: $value; }
  .pl-#{$name} { padding-left: $value; }
  .px-#{$name} { 
    padding-left: $value; 
    padding-right: $value; 
  }
  .py-#{$name} { 
    padding-top: $value; 
    padding-bottom: $value; 
  }
}